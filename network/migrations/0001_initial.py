# Generated by Django 3.2.7 on 2021-10-26 15:52

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('type', models.CharField(default='author', max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('id', models.URLField(null=True)),
                ('url', models.URLField(null=True)),
                ('host', models.URLField(null=True)),
                ('displayName', models.CharField(max_length=100, null=True)),
                ('github', models.URLField(null=True)),
                ('profileImage', models.URLField(null=True)),
                ('followers', models.ManyToManyField(blank=True, to='network.Author')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('type', models.CharField(default='post', max_length=100)),
                ('title', models.CharField(max_length=100, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('id', models.URLField(null=True)),
                ('source', models.URLField(null=True)),
                ('origin', models.URLField(null=True)),
                ('description', models.CharField(max_length=500, null=True)),
                ('contentType', models.CharField(choices=[('text/plain', 'Plain'), ('text/markdown', 'Markdown'), ('application/base64', 'Base64'), ('image/png;base64', 'PNG'), ('image/jpeg;base64', 'JPEG')], default='text/plain', max_length=20)),
                ('content', models.TextField()),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None)),
                ('count', models.IntegerField(null=True)),
                ('comments', models.URLField(null=True)),
                ('published', models.DateTimeField(null=True)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('FOAF', 'Friend of a Friend'), ('FRIENDS', 'Friends'), ('SERVERONLY', 'Server Only')], default='PUBLIC', max_length=10)),
                ('unlisted', models.BooleanField(null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_author', to='network.author')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='follow', max_length=100)),
                ('summary', models.CharField(max_length=500, null=True)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actor', to='network.author')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='object', to='network.author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('type', models.CharField(default='comment', max_length=50)),
                ('comment', models.CharField(max_length=300)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('id', models.CharField(max_length=400, primary_key=True, serialize=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.author')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.post')),
            ],
        ),
    ]
